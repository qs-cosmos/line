" environment {

set nocompatible

filetype off

let mapleader = ","

set clipboard=unnamed,unnamedplus

set mouse=a

" }

" syntax highlight {

filetype plugin on
syntax enable
syntax on

" }

" encoding {

set encoding=utf-8
set fileencodings=utf-8,gb2312,gbk
set termencoding=utf-8

" }

" spaces {

set tabstop=4
set noexpandtab
set backspace=indent,eol,start

" }

" indent {

set autoindent
set smartindent
set shiftwidth=4
set softtabstop=4

" }

" text search style {

" default to be case-insensitive.
set ignorecase

" set to be case-sensitive if exists upper case charachters.
set smartcase

" }

" display style {

set t_Co=256
set background=dark
colorscheme solarized

set number
set foldmethod=indent

set list
set listchars=eol:⇠,tab:>-,nbsp:-,trail:-

" highlight the 81th column
set colorcolumn=81

" the vertical split terminal line
hi VertSplit ctermfg=23 ctermbg=8 gui=reverse

" the number line
hi LineNr ctermfg=242 ctermbg=0

" the 81th line color
hi ColorColumn ctermbg=0

" the listchars highlight
hi SpecialKey ctermfg=23 ctermbg=8

" the display warn or error sign line
hi SignColumn  ctermfg=235 ctermbg=235 guifg=Cyan guibg=Grey
hi ALEErrorSign  ctermfg=196 ctermbg=0
hi ALEErrorLine  ctermbg=233
hi ALEWarningSign  ctermfg=142 ctermbg=0

" }

" vim-plug {

call plug#begin('~/.vim/plugged')

" code

Plug 'Valloric/YouCompleteMe'

Plug 'majutsushi/tagbar'

Plug 'Yggdroot/indentLine'

Plug 'jiangmiao/auto-pairs'

Plug 'godlygeek/tabular'

Plug 'scrooloose/nerdcommenter'

" style

Plug 'vim-airline/vim-airline'

Plug 'vim-airline/vim-airline-themes'

Plug 'scrooloose/nerdtree', { 'on': 'NERDTreeToggle' }

call plug#end()

filetype plugin indent on

" }

" YouCompleteMe {

" general settings
let g:ycm_collect_identifiers_from_tags_files           = 1
let g:ycm_seed_identifiers_with_syntax                  = 1
let g:ycm_autoclose_preview_window_after_insertion      = 1
let g:ycm_collect_identifiers_from_comments_and_strings = 0
let g:ycm_complete_in_comments    = 1
let g:ycm_complete_in_strings     = 1
let g:ycm_enable_diagnostic_signs = 0
let g:ycm_echo_current_diagnostic = 0
let g:ycm_confirm_extra_conf      = 0

" path
let g:ycm_path_to_python_interpreter = 'python3'
let g:ycm_python_binary_path         = 'python3'
let g:ycm_global_ycm_extra_conf      = '~/.ycm_extra_conf.py'

" }

" tagbar {

let g:tagbar_compact = 1
let g:tagbar_autoshowtag = 1
let g:tagbar_iconchars = ['▸', '▾']
let g:tagbar_sort = 0
let g:tagbar_ctags_bin = 'ctags'

" }

" nerdtree {

let NERDTreeIgnore = ['\.pyc$[[file]]', '\.o$[[file]]', '\.pro.user$[[file]]', 'node_modules']

" }

" nerdcommenter {

" add a space after comment delimiters
let g:NERDSpaceDelims = 1

" use compact syntax for prettified multi-line comments
let g:NERDCompactSexyComs = 1

" align line-wise comment delimiters flush left instead of following code indent
let g:NERDDefaultAlign = 'left'

" allow commenting and inverting empty lines (useful when commenting a region)
let g:NERDCommentEmptyLines = 1

let g:NERDCustomDelimiters = {
        \ 'tiny': {'left': '{', 'right': '}'}
    \ }

" }

" vim-airline {

set laststatus=2
let g:airline#extensions#ycm#enabled=0
let g:airline_theme='luna'

" }

" function {

" others
function! SwitchMouseModel()
	if &mouse == 'a'
		exec 'set mouse=v'
	elseif &mouse == 'v'
		exec 'set mouse=a'
	endif
endfunc

" }

" key-map {

" YouCompleteMe
map gd :YcmCompleter GoToDefinitionElseDeclaration<CR>

" tagbar
nnoremap <F5> :Tagbar <cr>

" nerdtree
nnoremap <F2> :NERDTreeToggle <cr>

" hlsearch
noremap n :set hlsearch<cr>n
noremap N :set hlsearch<cr>N
noremap / :set hlsearch incsearch<cr>/
noremap ? :set hlsearch<cr>?
noremap * *:set hlsearch<cr>

" others
nnoremap <F3> :call SwitchMouseModel() <cr>

" }

" auto cmd {

" close the preview window when completion is done
autocmd! CompleteDone * if pumvisible() == 0 | pclose | endif

" nohlsearch when cursorhold
autocmd cursorhold,InsertEnter * set nohlsearch noincsearch

" highlight the char with column index 80
autocmd BufWinEnter *.h,*.cpp,*.c,*.py,*.sh let w:m2=matchadd('ErrorMsg', '\%81v.', -1)

" delete the backspaces at the end of the line
autocmd BufWritePre * exec ':%s/\s\+$//e'

" close the nerdtree when the target is empty
autocmd BufEnter * if (winnr('$') == 1 && exists('b:NERDTree') && b:NERDTree.isTabTree()) | q |

" specify the fold method in *.python, *.html, *.vue
autocmd FileType python set foldmethod=indent

" get correct comment highlighting for *.json
autocmd FileType json syntax match Comment +\/\/.\+$+

" disable `indentLine` so that the quotes can be displayed normally
autocmd FileType json IndentLinesDisable

" not display listchars in Makefile
autocmd FileType make set nolist

" remap the keys for auto-pairs
autocmd FileType * call AutoPairsInit()

"}

" format {

" add comment sign when enter
set formatoptions+=ro

" }
